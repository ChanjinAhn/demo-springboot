plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id "io.freefair.lombok" version "6.4.3.1"
	id 'java'
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group = 'example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	all{
		// spring boot 기본 logger 제외
		exclude module: 'spring-boot-starter-logging'
		// was tomcat 제외
		exclude module: 'spring-boot-starter-tomcat'
		exclude module: 'undertow-websockets-jsr'
		exclude module: 'org.hamcrest'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Project base and config
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	// common
	implementation 'org.apache.commons:commons-text:1.9'
	// logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	// security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-spring:2.2-M3-groovy-3.0'
	// WAS, servlet
	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.1'
	// rest api docs
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	// View Template: thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    // database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	implementation 'com.h2database:h2'
	// querydsl
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-apt"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

test {
	useJUnitPlatform()
}

springBoot {
	mainClass = 'io.oikk.DemoSpringbootApplication'
}

def generated='src/main/generated'
sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}